@model Stormpath.Owin.Abstractions.ViewModel.ExtendedLoginViewModel
@using System
@using System.Linq
@using Stormpath.Owin.Abstractions


    <div class="container custom-container">
        <div class="va-wrapper">
            <div class="view login-view container">
                <br>
                <div class="box row">
                    <div class="email-password-area col-xs-12 large col-sm-12">
                        @* switch col-sm-12 to col-sm-8 if social providers are present *@
                        @if (Model.RegistrationEnabled)
                        {
                            <div class="header">
                                <span>Log In or <a href="@Model.RegisterUri">Create Account</a></span>
                            </div>
                        }
                        else
                        {
                            <div class="header">
                                <span>Log In</span>
                            </div>
                        }
                        @if (Model.Errors.Any())
                        {
                            <div class="alert alert-danger bad-login">
                                @foreach (var error in Model.Errors)
                                {
                                    <p>@error</p>
                                }
                            </div>
                        }
                        <form method="post" role="form" class="login-form form-horizontal">
                            @* <input name="_csrf" type="hidden"> *@

                            @foreach (var field in Model.Form.Fields)
                            {
                                <div class="form-group @($"group-{field.Name}")">
                                    <label class="col-sm-4">@field.Label</label> @* switch to col-sm-12 if social providers are present *@
                                    <div class="col-sm-8">
                                        @* switch to col-sm-12 if social providers are present *@
                                        <input placeholder="@field.Placeholder"
                                               name="@field.Name"
                                               type="@field.Type"
                                               value="@(Model.FormData.Get(field.Name) ?? string.Empty)"
                                               class="form-control"
                                               @(field.Required ? "required" : string.Empty)>
                                    </div>
                                </div>
                            }
                            <div>
                                <button type="submit" class="login btn btn-login btn-sp-green">Log In</button>
                            </div>
                        </form>
                    </div>
                    @* Social provider section *@
                </div>
                @if (Model.VerifyEmailEnabled)
                {
                    <a style="float:right" href="@Model.VerifyEmailUri" class="forgot">Resend Verification Email?</a>
                }

                @if (Model.ForgotPasswordEnabled)
                {
                    <a style="float:right" href="@Model.ForgotPasswordUri" class="forgot">Forgot Password?</a>
                }

            </div>
        </div>
    </div>